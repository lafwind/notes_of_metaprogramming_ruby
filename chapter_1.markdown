### 第一章 对象模型

##### 重要概念

* 打开类。

  * 打开已存在的类并对其进行动态修改。

* Ruby 的 class 关键字更像是一个作用域而不是类型声明语句。

  * 核心任务是把你带到类的上下文中，让你可以在其中定义方法。

* 猴子打补丁（Monkeypatch）。

  * 为某个类添加的方法的名字与该类原有方法重名。

* 对象

  * 对象仅仅包含它的实例变量（@v）以及一个对自身类的引用。
 
  * 一个对象的实例变量存在于对象本身，而对象的方法存在于对象自身的类。这即是同一个类的对象共享同样的方法，但不共享实例变量的原因。

* 类

  * _类自身也是对象_，它也有自己的类，这个类的名字叫*class*。这意味着_一个类的方法（类方法）就是*class*的实例方法_。

  * 一个类是一个增强的Module，增强了_new()_、_allocate()_和_superclass()_这三个方法。

  * 绝大多数适用于类的内容也同样适用于模块。反之亦然。

##### 实用方法

* 查找类中的方法：

```ruby
Array.methods #查找Array中的所有方法

Hash.methods.grep /^re/ #查找Hash中所有以re开头的方法
```


