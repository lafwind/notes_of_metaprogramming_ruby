### 类定义

###### 当前类

* 你可以在类定义中放入任何代码
* 类和模块也是对象（不断重复~）
* 不管处在Ruby程序的哪个位置，总是存在一个当前对象**self**；类似地，也总是有一个当前类（模块）存在。
* 在类定义中，当前对象self就是正在定义的类
* 在类定义中，当前类就是self，即正在定义的类
* Ruby解释器总是追踪当前类（或模块）的引用。所有使用**def**定义的方法都成为当前类的实例方法。
* 如果有一个类的引用，则可以用`class_eval()`（或`module_eval()`）方法来打开这个类
